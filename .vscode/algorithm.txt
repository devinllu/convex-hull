The algorithm proceeds by considering each of the points in the sorted array in sequence. 
For each point, it is first determined whether traveling from the two points immediately preceding this point constitutes making a left turn or a right turn. 
If a right turn, the second-to-last point is not part of the convex hull, and lies 'inside' it. The same determination is then made for the set of the latest point and the two points that immediately precede the point found to have been inside the hull, 
and is repeated until a "left turn" set is encountered, at which point the algorithm moves on to the next point in the set of points in the sorted array minus any points that were found to be inside the hull; 
there is no need to consider these points again. (If at any stage the three points are collinear, 
one may opt either to discard or to report it, since in some applications it is required to find all points on the boundary of the convex hull.)

Again, determining whether three points constitute a "left turn" or a "right turn" does not require computing the actual angle between the two line segments, 
and can actually be achieved with simple arithmetic only. For three points {\displaystyle P_{1}=(x_{1},y_{1})}P_{1}=(x_{1},y_{1}), 
{\displaystyle P_{2}=(x_{2},y_{2})}P_{2}=(x_{2},y_{2}) and {\displaystyle P_{3}=(x_{3},y_{3})}P_{3}=(x_{3},y_{3}), 
compute the z-coordinate of the cross product of the two vectors {\displaystyle {\overrightarrow {P_{1}P_{2}}}}\overrightarrow {P_{1}P_{2}} 
and {\displaystyle {\overrightarrow {P_{1}P_{3}}}}\overrightarrow {P_{1}P_{3}}, which is given by the expression 
{\displaystyle (x_{2}-x_{1})(y_{3}-y_{1})-(y_{2}-y_{1})(x_{3}-x_{1})}(x_{2}-x_{1})(y_{3}-y_{1})-(y_{2}-y_{1})(x_{3}-x_{1}).
 If the result is 0, the points are collinear; if it is positive, the three points constitute a "left turn" or counter-clockwise orientation, 
 otherwise a "right turn" or clockwise orientation (for counter-clockwise numbered points).

This process will eventually return to the point at which it started,
at which point the algorithm is completed and the stack now contains the points on the convex hull in counterclockwise order.